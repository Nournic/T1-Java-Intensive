version: '3.8'

services:
  # Базы данных
  db-credits:
    image: postgres:15-alpine
    container_name: credits-db
    environment:
      - POSTGRES_USER=${CREDITS_DB_USER}
      - POSTGRES_PASSWORD=${CREDITS_DB_PASSWORD}
      - POSTGRES_DB=${CREDITS_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - credits_data:/var/lib/postgresql/data
  db-clients:
    image: postgres:15-alpine
    container_name: clients-db
    environment:
      - POSTGRES_USER=${CLIENTS_DB_USER}
      - POSTGRES_PASSWORD=${CLIENTS_DB_PASSWORD}
      - POSTGRES_DB=${CLIENTS_DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - clients_data:/var/lib/postgresql/data
  db-accounts:
    image: postgres:15-alpine
    container_name: accounts-db
    environment:
      - POSTGRES_USER=${ACCOUNTS_DB_USER}
      - POSTGRES_PASSWORD=${ACCOUNTS_DB_PASSWORD}
      - POSTGRES_DB=${ACCOUNTS_DB_NAME}
    ports:
      - "5434:5432"
    volumes:
      - accounts_data:/var/lib/postgresql/data

  # Сервисы
  credit-processing-service:
    build:
      context: .
      dockerfile: ./credit-processing-ms/Dockerfile
    container_name: credit-processing-ms
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-credits:5432/${CREDITS_DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${CREDITS_DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${CREDITS_DB_PASSWORD}
    depends_on:
      - db-credits

  client-processing-service:
    build:
      context: .
      dockerfile: ./client-processing-ms/Dockerfile
    container_name: client-processing-ms
    ports:
      - "8081:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-clients:5432/${CLIENTS_DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${CLIENTS_DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${CLIENTS_DB_PASSWORD}
    depends_on:
      - db-clients

  account-processing-service:
    build:
      context: .
      dockerfile: ./account-processing-ms/Dockerfile
    container_name: account-processing-ms
    ports:
      - "8082:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-accounts:5432/${ACCOUNTS_DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${ACCOUNTS_DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${ACCOUNTS_DB_PASSWORD}
    depends_on:
      - db-accounts

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
    ports:
      - "2182:2182"

  kafka-1:
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka-1
    container_name: kafka-1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2182'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-2:
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka-2
    container_name: kafka-2
    depends_on:
      - zookeeper
    ports:
      - "29093:29092"
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2182'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8081:8080"
    depends_on:
      - kafka-1
      - kafka-2
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:29092,kafka-2:29093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2182

volumes:
  credits_data:
  clients_data:
  accounts_data: